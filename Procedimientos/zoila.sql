/* 
    PB  = PARAMETRO BIGINT
 -- PV  = PARAMETRO VARCHAR
 -- PC  = PARAMETRO CHAR
 -- PEM = PARAMETRO ENUM
 -- PF  = PARAMETRO FECHA
 -- PMI = PARAMETRO MEDIUMINT 
 -- PMT = PARAMETRO MEDIUMTEXT
 -- PI  = PARAMETRO INT
 -- PD  = PARAMETRO DECIMAL
 -- PDB = PARAMETRO DOUBLE
 -- PMB = PARAMETRO MEDIUMBLOB
*/



CREATE PROCEDURE PRC_CUENTAS(
   IN PV_NATURALEZA VARCHAR(255)
  ,IN PV_NOMBRE_CUENTA VARCHAR(255)
  ,IN PV_NUM_CUENTA VARCHAR(255)
  /*,IN PV_OPERACION VARCHAR(1)
  ,IN PB_FILA BIGINT */
)
BEGIN
DECLARE V_CODIGO VARCHAR(255);
DECLARE V_VALIDADORDEEXISTENCIA INT;
/*LLEVA FORANEA CON LA CLASIFICACION*/
/*Valida naturaleza*/
SELECT COD_CLASIFICACION FROM TBL_CLASIFICACIONES WHERE NATURALEZA = PV_NATURALEZA INTO V_CODIGO;
/*Valida existencia*/
select count(*) from tbl_cuentas where NUM_CUENTA =  CONCAT(V_CODIGO,'.',PV_NUM_CUENTA) INTO V_VALIDADORDEEXISTENCIA;
/*si NO existe*/
IF V_VALIDADORDEEXISTENCIA = 0 THEN

INSERT INTO tbl_cuentas
(COD_CLASIFICACION, NUM_CUENTA, NOM_CUENTA) 
VALUES (V_CODIGO, CONCAT(V_CODIGO,'.',PV_NUM_CUENTA), PV_NOMBRE_CUENTA);
/* Si existe despliega mensaje que esta duplicado */
ELSE
SELECT 'NUMERO DE CUENTA DUPLICADA';
END IF;
COMMIT;
END;



CREATE PROCEDURE PRC_LIBDIARIO(

   IN PV_NOM_CUENTA VARCHAR(255)
  ,IN PV_NOM_SUBCUENTA VARCHAR(255)
  ,IN PV_SALDO_DEBE INT
  ,IN PV_SALDO_HABER INT
  ,IN PV_OPERACION VARCHAR(1)
  , IN PB_FILA BIGINT 
  , IN PF_FEC_BUSCAR DATE
)
BEGIN
DECLARE V_CODCUENTA,V_CODSUBCUENTA,V_CODESTCUENTA BIGINT;
DECLARE V_SUBCUENTA VARCHAR(255);
START TRANSACTION;

/* Trae los datos de las cuentas disponibles */
IF PV_OPERACION = 1 THEN
SELECT NUM_CUENTA,NOM_CUENTA FROM TBL_CUENTAS ORDER BY NUM_CUENTA Asc;


/*Trae los datos de las subcuentas disponibles*/
ELSEIF PV_OPERACION = 2 THEN
SELECT NUM_SUBCUENTA, NOM_SUBCUENTA FROM TBL_SUBCUENTAS WHERE COD_CUENTA =  PB_FILA ;

/*Insertar Libro Diario CUENTA Y SUBCUENTA  */
ELSEIF PV_OPERACION = 3 THEN

/*---------------------------------------------------------------------------------------------------------*/
SELECT COD_CUENTA FROM TBL_CUENTAS WHERE NOM_CUENTA =  PV_NOM_CUENTA INTO V_CODCUENTA; 
SELECT COD_SUBCUENTA, NUM_SUBCUENTA  FROM TBL_SUBCUENTAS WHERE NOM_SUBCUENTA = PV_NOM_SUBCUENTA INTO V_CODSUBCUENTA,V_SUBCUENTA; 
SELECT COD_ESTADO from tbl_estados_subcuentas where cod_subcuenta = V_CODSUBCUENTA INTO V_CODESTCUENTA;

INSERT INTO tbl_libros_diarios
(COD_CUENTA, COD_SUBCUENTA, COD_ESTADO, NUM_SUBCUENTA, NOM_SUBCUENTA, SAL_DEBE, SAL_HABER, FEC_LIBDIARIO) 
VALUES (V_CODCUENTA, V_CODSUBCUENTA, V_CODESTCUENTA, V_SUBCUENTA, PV_NOM_SUBCUENTA, PV_SALDO_DEBE, PV_SALDO_HABER, now());
ELSEIF PV_OPERACION = 4 THEN
SELECT * FROM TBL_LIBROS_DIARIOS;

ELSEIF PV_OPERACION = 5 THEN
SELECT * FROM TBL_LIBROS_DIARIOS WHERE COD_LIBDIARIO = PB_FILA;

ELSEIF PV_OPERACION = 6 THEN 
SELECT * FROM TBL_LIBRO_DIARIO where FEC_LIBDIARIO BETWEEN PF_FEC_BUSCAR AND DATE_ADD(PF_FEC_BUSCAR,INTERVAL 1 month);

END IF;
COMMIT;
END;






CREATE PROCEDURE UPD_LIBDIARIO(
 IN PB_COD_CUENTA    BIGINT                               
,IN PB_COD_SUBCUENTA BIGINT                                                        
,IN PB_COD_ESTADO    BIGINT                                  
,IN PB_NUM_SUBCUENTA VARCHAR(255)                    
,IN PB_NOM_SUBCUENTA VARCHAR(255)                    
,IN PB_SAL_DEBE    DECIMAL (8,2)                    
,IN PB_SAL_HABER   DECIMAL (8,2)                     
,IN PB_FEC_LIBDIARIO DATETIME    
,IN PB_FILA BIGINT
)
BEGIN
START TRANSACTION;
UPDATE tbl_libros_diarios 
SET COD_CUENTA = PB_COD_CUENTA , COD_SUBCUENTA = PB_COD_SUBCUENTA, COD_ESTADO = PB_COD_ESTADO, NUM_SUBCUENTA = PB_NUM_SUBCUENTA, NOM_SUBCUENTA = PB_NOM_SUBCUENTA, SAL_DEBE = PB_SAL_DEBE, SAL_HABER = PB_SAL_HABER, FEC_LIBDIARIO = NOW() 
WHERE COD_LIBDIARIO = PB_FILA;
COMMIT;
END;

CREATE PROCEDURE DEL_LIBDIARIO(
PB_CODLIBDIARIO BIGINT
)
BEGIN
START TRANSACTION;
DELETE FROM tbl_libros_diarios 
WHERE COD_LIBDIARIO = PB_CODLIBDIARIO;
COMMIT;
END;








/* BALANCE GENERAL */


CREATE PROCEDURE `PRC_BAL_GENERAL`(
 IN PV_NOMBRE_EMPRESA VARCHAR(255)
,IN PV_NATURALEZA VARCHAR(255)
,IN PV_OPCION VARCHAR(1)
)
BEGIN
DECLARE DEBE,HABER INT;
DECLARE V_NUMCUENTA VARCHAR(255);
DECLARE V_NOMCUENTA VARCHAR(255);
DECLARE CODIGO BIGINT;
DECLARE TOTAL BIGINT;
DECLARE V_NUM,V_CLASIFICACION,I BIGINT;

IF PV_OPCION = 1 THEN

/*Trea saldo debe y haber de activo*/
SELECT COD_CLASIFICACION FROM TBL_CLASIFICACIONES  WHERE NATURALEZA =  PV_NATURALEZA INTO V_CLASIFICACION;
SELECT COUNT(*) FROM  TBL_LIBROS_MAYORES WHERE COD_CLASIFICACION = V_CLASIFICACION INTO V_NUM;
SET I=0;

WHILE I<V_NUM do 

  SELECT COD_LIBMAYOR,NUM_CUENTA,NOM_CUENTA,SAL_DEBE,SAL_HABER FROM TBL_LIBROS_MAYORES WHERE COD_CLASIFICACION = V_CLASIFICACION LIMIT I,1 INTO CODIGO,V_NUMCUENTA,V_NOMCUENTA,DEBE,HABER;

    IF DEBE > HABER THEN
      SET TOTAL:=DEBE-HABER;
      SELECT "SALDO DEUDOR";
     ELSE  
      SET TOTAL:= DEBE - HABER;   
      SET TOTAL:= TOTAL * -1;
      SELECT "SALDO ACREEDOR";
    END IF;
 SET I = I + 1;
 

SELECT CODIGO,V_NUMCUENTA,V_NOMCUENTA,DEBE,HABER;

 INSERT INTO tbl_balances_generales
(COD_LIBMAYOR, EMPRESA, FEC_BALANCE, TOT_ACTIVO, TOT_PASIVO, TOT_PATRIMONIO) 
VALUES (CODIGO, PV_NOMBRE_EMPRESA, NOW(), TOTAL,  0, 0);


END WHILE;

ELSEIF PV_OPCION = 2 THEN
/*Trea saldo debe y haber de PasIvo*/
SELECT COD_CLASIFICACION FROM TBL_CLASIFICACIONES  WHERE NATURALEZA = PV_NATURALEZA INTO V_CLASIFICACION;
SELECT COUNT(*) FROM  TBL_LIBROS_MAYORES WHERE COD_CLASIFICACION = V_CLASIFICACION INTO V_NUM;
SET I=0;

WHILE I<V_NUM do 
  SELECT COD_LIBMAYOR,NUM_CUENTA,NOM_CUENTA,SAL_DEBE,SAL_HABER FROM TBL_LIBROS_MAYORES WHERE COD_CLASIFICACION = V_CLASIFICACION LIMIT I,1 INTO CODIGO,V_NUMCUENTA,V_NOMCUENTA,DEBE,HABER;
    IF DEBE > HABER THEN
      SET TOTAL:=DEBE-HABER;
      SELECT "SALDO DEUDOR";
     ELSE  
      SET TOTAL:= DEBE - HABER;   
      SET TOTAL:= TOTAL * -1;
      SELECT "SALDO ACREEDOR";
    END IF;
 SET I = I + 1;
 INSERT INTO tbl_balances_generales
(COD_LIBMAYOR, EMPRESA, FEC_BALANCE, TOT_ACTIVO, TOT_PASIVO, TOT_PATRIMONIO) 
VALUES (CODIGO, PV_NOMBRE_EMPRESA, NOW(), 0,  TOTAL, 0);
END WHILE;
ELSEIF PV_OPCION = 3 THEN
/*Trea saldo debe y haber de Pasovo*/
SELECT COD_CLASIFICACION FROM TBL_CLASIFICACIONES  WHERE NATURALEZA = PV_NATURALEZA INTO V_CLASIFICACION;
SELECT COUNT(*) FROM  TBL_LIBROS_MAYORES WHERE COD_CLASIFICACION = V_CLASIFICACION INTO V_NUM;
SET I=0;

WHILE I<V_NUM do 
  SELECT COD_LIBMAYOR,NUM_CUENTA,NOM_CUENTA,SAL_DEBE,SAL_HABER FROM TBL_LIBROS_MAYORES WHERE COD_CLASIFICACION = V_CLASIFICACION LIMIT I,1 INTO CODIGO,V_NUMCUENTA,V_NOMCUENTA,DEBE,HABER;
    IF DEBE > HABER THEN
      SET TOTAL:=DEBE-HABER;
      SELECT "SALDO DEUDOR";
     ELSE  
      SET TOTAL:= DEBE - HABER;   
      SET TOTAL:= TOTAL * -1;
      SELECT "SALDO ACREEDOR";
    END IF;
 SET I = I + 1;
 INSERT INTO tbl_balances_generales
(COD_LIBMAYOR, EMPRESA, FEC_BALANCE, TOT_ACTIVO, TOT_PASIVO, TOT_PATRIMONIO) 
VALUES (CODIGO, PV_NOMBRE_EMPRESA, NOW(), 0,  0, TOTAL);
END WHILE;
END IF;
COMMIT;
END;

CREATE PROCEDURE PRC_BLG(
     IN PB_COD_LIBMAYOR bigint 
    ,IN PV_EMPRESA varchar(50)
    ,IN PB_TOT_ACTIVO BIGINT 
    ,IN PB_TOT_PASIVO BIGINT 
    ,IN PB_TOT_PATRIMONIO BIGINT   
    ,IN PV_OPERACION VARCHAR(1)
    , IN PB_FILA BIGINT
)

BEGIN

START TRANSACTION;
IF PV_OPERACION = 1 THEN
UPDATE tbl_balances_generales 
SET COD_LIBMAYOR = PB_COD_LIBMAYOR , EMPRESA = PV_EMPRESA, FEC_BALANCE = NOW(), TOT_ACTIVO = PB_TOT_ACTIVO, TOT_PASIVO = PB_TOT_PASIVO, TOT_PATRIMONIO = PB_TOT_PATRIMONIO 
WHERE COD_BALANCE = PB_FILA;

ELSEIF  PV_OPERACION = 2 THEN 
DELETE FROM TBL_BALANCES_GENERALES WHERE COD_BALANCE = PB_FILA;
ELSEIF  PV_OPERACION = 4 THEN
SELECT * FROM tbl_balances_generales; 
ELSEIF  PV_OPERACION = 5 THEN
SELECT * FROM tbl_balances_generales  WHERE COD_BALANCE = PB_FILA;
END IF;
COMMIT;
END






CREATE PROCEDURE PROC_ESTADOS_RESULTADOS(
    PV_OPCION VARCHAR(1)
)BEGIN
  DECLARE CODIGO, SALDO_DEBE,SALDO_HABER INT;
  DECLARE V_NUM_CUENTA,V_NOM_CUENTA VARCHAR(255);
  IF PV_OPCION = 1 THEN
  SELECT * FROM TBL_ESTADOS_RESULTADOS ;
  ELSEIF PV_OPCION = 2 THEN
  SELECT COD_LIBMAYOR,NUM_CUENTA,NOM_CUENTA,SALDO_DEBE,SALDO_HABER FROM TBL_LIBRO_MAYOR WHERE NATURALEZA = 'RESULTADOS' INTO CODIGO,V_NUM_CUENTA,V_NOM_CUENTA,SALDO_DEBE,SALDO_HABER;
  ELSEIF PV_OPCION = 3 THEN
  SELECT * FROM TBL_LIBRO_DIARIO where FEC_LIBDIARIO BETWEEN '2022-07-01' AND DATE_ADD('2022-07-01',INTERVAL 1 month);
  END IF;
COMMIT;
END;







