/* 
    PB  = PARAMETRO BIGINT
 -- PV  = PARAMETRO VARCHAR
 -- PC  = PARAMETRO CHAR
 -- PEM = PARAMETRO ENUM
 -- PF  = PARAMETRO FECHA
 -- PMI = PARAMETRO MEDIUMINT 
 -- PMT = PARAMETRO MEDIUMTEXT
 -- PI  = PARAMETRO INT
 -- PD  = PARAMETRO DECIMAL
 -- PDB = PARAMETRO DOUBLE
 -- PMB = PARAMETRO MEDIUMBLOB
*/
/*--------------PROC ROLES-------------------*/
CREATE PROCEDURE PRC_MS_ROLES(
        IN PB_COD_ROL  BIGINT 
      , IN PV_TIP_ROL  VARCHAR(30) 
      , IN PV_DES_ROL  VARCHAR(50)
      , IN PV_OPERACION VARCHAR(1)
      , IN PB_FILA   BIGINT 
)
BEGIN
START TRANSACTION;
IF PV_OPERACION = 1 THEN

INSERT INTO tbl_ms_roles
(ROL, DES_ROL) 
VALUES (PV_TIP_ROL, PV_DES_ROL);


ELSEIF PV_OPERACION = 2 THEN

UPDATE tbl_ms_roles 
SET COD_ROL = PB_COD_ROL , ROL = PV_TIP_ROL, DES_ROL = PV_DES_ROL 
WHERE COD_ROL = PB_FILA;

ELSEIF PV_OPERACION = 3 THEN

DELETE FROM tbl_ms_roles 
WHERE COD_ROL = PB_FILA; 

ELSEIF PV_OPERACION = 4 THEN

SELECT * FROM TBL_MS_ROLES;

ELSEIF PV_OPERACION = 5 THEN
SELECT * FROM TBL_MS_ROLES WHERE COD_ROL = PB_FILA;

END IF;
COMMIT;
END;
/*---------------------------------------------------------*/

/*--------------PROCEDIMIENTOS DE ROLES OBJETOS------------*/
CREATE PROCEDURE PRC_ROLES_OBJETOS(
        IN PB_COD_ROL  BIGINT 
      , IN PB_COD_OBJETO  BIGINT 
      , IN PV_PER_EDICION  VARCHAR(1)
      , IN PV_PER_ELIMINAR  VARCHAR(1)
      , IN PV_PER_ACTUALIZAR  VARCHAR(1)
      , IN PF_FEC_CREACION  DATE
      , IN PV_CRERADO_POR  VARCHAR(100)
      , IN PF_FEC_MODIFICACION  DATE
      , IN PV_MOD_POR  VARCHAR(100)
      , IN PV_OPERACION VARCHAR(1)
      , IN PB_FILA   BIGINT 
)
BEGIN
START TRANSACTION;
IF PV_OPERACION = 1 THEN

INSERT INTO tbl_roles_objetos
(COD_ROL, COD_OBJETO, PER_EDICION, PER_ELIMINAR, PER_ACTUALIZAR, FEC_CREACION, CREADO_POR, FEC_MODIFICACION, MOD_POR) 
VALUES (PB_COD_ROL, PB_COD_OBJETO, PV_PER_EDICION, PV_PER_ELIMINAR, PV_PER_ACTUALIZAR, PF_FEC_CREACION, PV_CREADO_POR, PF_FEC_MODIFICACION, PV_MOD_POR);


ELSEIF PV_OPERACION = 2 THEN

UPDATE tbl_ms_roles 
SET COD_ROL=PB_COD_ROL, COD_OBJETO=PB_COD_OBJETO, PER_EDICION=PV_PER_EDICION, 
PER_ELIMINAR=PV_PER_ELIMINAR, PER_ACTUALIZAR=PV_PER_ACTUALIZAR, FEC_CREACION=PF_FEC_CREACION, 
CREADO_POR=PV_CREADO_POR, FEC_MODIFICACION=PF_FEC_MODIFICACION, MOD_POR=PV_MOD_POR 
WHERE COD_ROL = PB_FILA;

ELSEIF PV_OPERACION = 3 THEN

DELETE FROM tbl_roles_objetos 
WHERE COD_ROL = PB_FILA; 

ELSEIF PV_OPERACION = 4 THEN

SELECT * FROM TBL_MS_ROLES;

ELSEIF PV_OPERACION = 5 THEN
SELECT * FROM TBL_ROLES_OBJETOS WHERE COD_ROL = PB_FILA;

END IF;
COMMIT;
END;
/*------------------------------------------------------------*/

/*--------------PROC PERMISOS-----------------*/
CREATE PROCEDURE PRC_PERMISOS(
        IN PB_COD_ROL  BIGINT 
      , IN PB_COD_OBJETO  BIGINT 
      , IN PV_PER_INSERCION  VARCHAR(1)
      , IN PV_PER_ELIMINAR  VARCHAR(1)
      , IN PV_PER_ACTUALIZAR  VARCHAR(1)
      , IN PV_PER_CONSULTAR  VARCHAR(1)
      , IN PV_OPERACION VARCHAR(1)
      , IN PB_FILA   BIGINT 
)
BEGIN
START TRANSACTION;
IF PV_OPERACION = 1 THEN

INSERT INTO tbl_permisos
(COD_ROL, COD_OBJETO, PER_INSERCION, PER_ELIMINAR, PER_ACTUALIZAR, PER_CONSULTAR) 
VALUES (PB_COD_ROL, PB_COD_OBJETO, PV_PER_INSERCION, PV_PER_ELIMINAR, PV_PER_ACTUALIZAR, PV_PER_CONSULTAR);


ELSEIF PV_OPERACION = 2 THEN

UPDATE tbl_permisos 
SET COD_ROL=PB_COD_ROL, COD_OBJETO=PB_COD_OBJETO, PER_INSERCION=PV_PER_INSERCION, 
PER_ELIMINAR=PV_PER_ELIMINAR, PER_ACTUALIZAR=PV_PER_ACTUALIZAR, PER_CONSULTAR=PV_PER_CONSULTAR 
WHERE COD_ROL = PB_FILA;

ELSEIF PV_OPERACION = 3 THEN

DELETE FROM tbl_permisos
WHERE COD_ROL = PB_FILA; 

ELSEIF PV_OPERACION = 4 THEN

SELECT * FROM TBL_PERMISOS;

ELSEIF PV_OPERACION = 5 THEN
SELECT * FROM TBL_PERMISOS WHERE COD_ROL = PB_FILA;

END IF;
COMMIT;
END;
/*---------------------------------------------------------*/

/*---------------TRIGGER BITACORA--------------------------*/
CREATE TRIGGER Bitacora after insert on TBL_MS_USR
for each row
BEGIN 
declare cont BIGINT;
set cont = (SELECT COUNT(*) FROM TBL_OBJETOS);
insert into TBL_MS_BITACORAS (FEC_REGISTRO, USR_REGISTRA, COD_USR, ACC_SISTEMA, DES_BITACORA,COD_OBJETO)
values (now(),current_user(), new.COD_USR, new.PRIMER_ACC,new.CORREO,cont);
END;
/*----------------------------------------------------------*/
